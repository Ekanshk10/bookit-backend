// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  userName  String
  userEmail String    @unique
  createdAt DateTime  @default(now())
  booking   Booking[]
}

model Experience {
  id             Int      @id @default(autoincrement())
  experienceName String
  location       String
  description    String
  price          Float
  about          String   @default("")
  imageUrl       String
  slots          Slot[]
  createdAt      DateTime @default(now())

  @@unique([experienceName, location])
}

model Slot {
  id             Int        @id @default(autoincrement())
  experienceId   Int
  experience     Experience @relation(references: [id], fields: [experienceId], onDelete: Cascade, onUpdate: Cascade)
  date           DateTime
  time           String
  avaliableSlots Int
  totalSlots     Int        @default(10)
  booking        Booking[]
  createdAt      DateTime   @default(now())
}

model PromoCode {
  id              Int          @id @default(autoincrement())
  code            String       @unique
  amount          Float
  discountType    DiscountType
  minBookingValue Float
  expiryDate      DateTime?
  usageLimit      Int?
  usedCount       Int
  booking         Booking[]
}

model Booking {
  id          Int        @id @default(autoincrement())
  slotId      Int
  slot        Slot       @relation(references: [id], fields: [slotId], onDelete: Cascade, onUpdate: Cascade)
  userId      Int
  user        User       @relation(references: [id], fields: [userId], onDelete: Cascade, onUpdate: Cascade)
  promoCodeId Int?
  promoCode   PromoCode? @relation(references: [id], fields: [promoCodeId], onDelete: SetNull, onUpdate: Cascade)
  finalPrice  Float
  bookingDate DateTime   @default(now())

  @@unique([userId, slotId])
}

enum DiscountType {
  PERCENTAGE
  FLAT
}
